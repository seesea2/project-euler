// Highly divisible triangular number
/*
	The sequence of triangle_data numbers is generated by adding the natural numbers. 
	So the 7th triangle_data number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
	The first ten terms would be:

	1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

	Let us list the factors of the first seven triangle_data numbers:

			1: 1
			3: 1,3
			6: 1,2,3,6
			10: 1,2,5,10
			15: 1,3,5,15
			21: 1,3,7,21
			28: 1,2,4,7,14,28

	We can see that 28 is the first triangle_data number to have over five divisors.

	What is the value of the first triangle_data number to have over five hundred divisors?

	Answer:
	76576500
*/

#include "1_99.h"

bool P12()
{
	try
	{
		uint64_t triangular_num;
		const int REQUIRED_DIVISIOR = 500;
		int i;

		triangular_num = 0;
		i = 0;
		do
		{
			triangular_num += ++i;
			auto factors = GetFactors(triangular_num);

			if (factors.size() + 2 > REQUIRED_DIVISIOR)
				break;
		} while (1);

		cout << "First triangle_data over five hundred divisors : " << triangular_num << endl;
		return true;
	}
	catch (...)
	{
		return false;
	}
}